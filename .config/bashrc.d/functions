# sourced by ~/.bashrc

## Creates an archive (*.tar.gz) from given directory.
function maketar() { tar cvzf "${1%%/}.tar.gz"  "${1%%/}/"; }

## Create a ZIP archive of a file or folder.
function makezip() { zip -r "${1%%/}.zip" "$1" ; }

age_pub () { cat ~/.local/share/age/age.key | grep public | cut -d':' -f2 | tr -d ' '; }
age_pub_pw () { cat ~/.local/share/age/key.age | age --decrypt | grep public | cut -d':' -f2 | tr -d ' '; }

# Functions
mkcd () { mkdir -p $1 && cd $1 ; }
mkmv () { 
    target_dir=$( echo $2 | rev | cut -d'/' -f2- | rev)

    if [ ! -d $target_dir ]; then
        echo "creating $target_dir.." 
        mkdir -p $target_dir
    fi

    mv $1 $2
}
mked () {
    target_dir=$( echo $1 | rev | cut -d'/' -f2- | rev)

    if [ ! -d $target_dir ]; then
        echo "creating $target_dir.." 
        mkdir -p $target_dir
    fi

    $EDITOR $1
}
mockdb_conn () {
    psql -d mockdb -h localhost -p 5434 admin
}


run_image () {
	image_name="$1"
	podman run -it --network=host --entrypoint=/bin/bash "$image_name"
}
build_image () {
	image_name="$1"
	podman build -t "localhost/$1" ./
}




free_mem () {
	free_mem=$(awk '/MemFree/{print $2}' /proc/meminfo)
	echo $((free_mem))
}

user_at_host () {
	echo "$USER@$(hostname)"
}

short_path () {
	echo "../$(pwd | rev | cut -d'/' -f-2 | rev)"
}
